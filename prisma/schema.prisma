generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  name        String
  email       String    @unique
  emailVerified Boolean @default(false)
  password    String
  role        String
  points      Int
  address     String
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt

  stores       Store[]
  orders       Order[]
}

model Store {
  id          Int       @id @default(autoincrement())
  ownerId     Int?
  categoryId  Int?
  name        String
  description String?
  foodtype    String?
  storeaddresses String?
  businesslicense String?
  imageUrl    String?   @db.Text
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt

  owner       User?     @relation(fields: [ownerId], references: [id])
  category    FoodCategory? @relation(fields: [categoryId], references: [id])
  menus       Menu[]
}

model Menu {
  id          Int       @id @default(autoincrement())
  storeId     Int
  name        String
  description String
  price       Int
  imageUrl    String?   @db.Text
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt

  store       Store     @relation(fields: [storeId], references: [id])
  orders      Order[]
}

model Order {
  id          Int       @id @default(autoincrement())
  customerId  Int?
  menuId      Int?
  quantity    Int
  totalPrice  Int
  status      String    
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt

  customer    User?     @relation(fields: [customerId], references: [id])
  menu        Menu?     @relation(fields: [menuId], references: [id])
  review      Review[]
}

model Review {
  id          Int       @id @default(autoincrement())
  orderId     Int? // Order 모델과의 관계를 나타내는 필드
  rating      Int
  comment     String
  imageUrl    String?   @db.Text
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt

  order       Order?    @relation(fields: [orderId], references: [id])
}

model FoodCategory {
  id        Int       @id @default(autoincrement())
  name      String?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  stores       Store[]
}
